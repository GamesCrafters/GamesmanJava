<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="GamesmanJava">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="GamesmanJava.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/jython.jar"/>
        <pathelement location="lib/org-json.jar"/>
        <pathelement location="lib/jline-0.9.94.jar"/>
        <pathelement location="lib/libthrift.jar"/>
        <pathelement location="lib/slf4j-api-1.5.8.jar"/>
        <pathelement location="lib/slf4j-nop-1.5.8.jar"/>
        <pathelement location="lib/xercesImpl.jar"/>
        <pathelement location="lib/avro-1.4.1.jar"/>
        <pathelement location="lib/jackson.jar"/>
        <pathelement location="lib/jetty.jar"/>
        <pathelement location="lib/servlet.jar"/>
        <pathelement location="lib/args4j-2.0.11.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="GamesmanJava.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="GZippedFileDatabase">
        <java classname="edu.berkeley.gamesman.database.GZippedFileDatabase" failonerror="true" fork="yes">
            <arg line="database54.db database54.db.gz"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="TestQuarto">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestQuarto" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="GamesmanJava.classpath"/>
        </junit>
    </target>
    <target name="HadoopTierMaster">
        <java classname="edu.berkeley.gamesman.parallel.tier.HadoopTierMaster" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="jobs/tictactoe/hadoopTierTTT.job"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="TestDartboardHasher">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestDartboardHasher" todir="${junit.output.dir}"/>
            <classpath refid="GamesmanJava.classpath"/>
        </junit>
    </target>
    <target name="QuartoPlayer">
        <java classname="edu.berkeley.gamesman.testing.QuartoPlayer" failonerror="true" fork="yes">
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="Gamesman">
        <java classname="edu.berkeley.gamesman.Gamesman" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="jobs/Connect4/Connect4_54.job"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="Play">
        <java classname="edu.berkeley.gamesman.Play" failonerror="true" fork="yes">
            <arg line="database54.db.gz"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="QuartoMinorHasher">
        <java classname="edu.berkeley.gamesman.hasher.QuartoMinorHasher" failonerror="true" fork="yes">
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="LoopyMaster">
        <java classname="edu.berkeley.gamesman.loopyhadoop.LoopyMaster" failonerror="true" fork="yes">
            <arg line="jobs/tictactoe/hadoopLoopyTTT.job"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="TestY">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TestY" todir="${junit.output.dir}"/>
            <classpath refid="GamesmanJava.classpath"/>
        </junit>
    </target>
    <target name="PlayC4">
        <java classname="edu.berkeley.gamesman.testing.C4Container" failonerror="true" fork="yes">
            <arg line="database54.db.gz"/>
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="DartboardHasher">
        <java classname="edu.berkeley.gamesman.hasher.DartboardHasher" failonerror="true" fork="yes">
            <classpath refid="GamesmanJava.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
